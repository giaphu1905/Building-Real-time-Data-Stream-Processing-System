{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 307,
  "lineage": "617d3044-4c35-2060-a043-ec1e8552c4d5",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "spark-operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "spark-operator",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "spark-operator",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.1.0",
                "chart": "spark-operator",
                "first_deployed": 1734025866,
                "last_deployed": 1734025866,
                "name": "spark-operator",
                "namespace": "spark-operator",
                "notes": "",
                "revision": 1,
                "values": "{\"installCRDs\":true,\"spark\":{\"jobNamespaces\":[\"pipeline\"]}}",
                "version": "2.1.0"
              }
            ],
            "name": "spark-operator",
            "namespace": "spark-operator",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubeflow.github.io/spark-operator",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              },
              {
                "name": "spark.jobNamespaces",
                "type": "",
                "value": "{pipeline}"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "2.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.spark-operator"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "cassandra_setup_keyspace_tables",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "cassandra-setup.cql": "CREATE KEYSPACE IF NOT EXISTS crypto_market_ksp \n    WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};\n\nUSE crypto_market_ksp;\n\nCREATE TABLE IF NOT EXISTS trades(\n    uuid uuid,\n    symbol text,\n    trade_conditions text,\n    price double,\n    volume double,\n    trade_timestamp timestamp,\n    ingest_timestamp timestamp,\n    PRIMARY KEY((symbol),trade_timestamp))\nWITH CLUSTERING ORDER BY (trade_timestamp DESC);\n\nCREATE INDEX IF NOT EXISTS ON trades (uuid);\n\nCREATE TABLE IF NOT EXISTS running_averages_15_sec(\n    uuid uuid,\n    symbol text,\n    price_volume_multiply double,\n    ingest_timestamp timestamp,\n    PRIMARY KEY((uuid),ingest_timestamp))\nWITH CLUSTERING ORDER BY (ingest_timestamp DESC);\n\nCREATE INDEX IF NOT EXISTS ON running_averages_15_sec (symbol);"
            },
            "id": "pipeline/create-keyspace-tables",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "create-keyspace-tables",
                "namespace": "pipeline",
                "resource_version": "1310249",
                "uid": "90ad2391-84e1-4a98-94f3-d030eea0b793"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "grafana-dashboard-pipeline",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "dashboard_pipeline.json": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"grafana\",\n          \"uid\": \"-- Grafana --\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": 2,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 8,\n      \"panels\": [],\n      \"repeat\": \"ticker\",\n      \"repeatDirection\": \"h\",\n      \"title\": \"Crypto Price\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"hadesarchitect-cassandra-datasource\",\n        \"uid\": \"zkkgdadVz\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 25,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 15,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 2,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"hadesarchitect-cassandra-datasource\",\n            \"uid\": \"zkkgdadVz\"\n          },\n          \"datasourceId\": 1,\n          \"filtering\": true,\n          \"hide\": false,\n          \"queryType\": \"query\",\n          \"rawQuery\": true,\n          \"refId\": \"A\",\n          \"target\": \"select symbol, price, trade_timestamp from trades where symbol = '$ticker' and trade_timestamp\u003e$__timeFrom and trade_timestamp\u003c$__timeTo;\\n\\n\"\n        }\n      ],\n      \"timeFrom\": \"5m\",\n      \"title\": \"Price\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"hadesarchitect-cassandra-datasource\",\n        \"uid\": \"zkkgdadVz\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"custom\": {\n            \"align\": \"auto\",\n            \"displayMode\": \"auto\",\n            \"inspect\": false\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 20,\n        \"w\": 9,\n        \"x\": 15,\n        \"y\": 1\n      },\n      \"id\": 6,\n      \"options\": {\n        \"footer\": {\n          \"fields\": \"\",\n          \"reducer\": [\n            \"sum\"\n          ],\n          \"show\": false\n        },\n        \"frameIndex\": 0,\n        \"showHeader\": true,\n        \"sortBy\": [\n          {\n            \"desc\": true,\n            \"displayName\": \"time\"\n          }\n        ]\n      },\n      \"pluginVersion\": \"10.1.1\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"hadesarchitect-cassandra-datasource\",\n            \"uid\": \"zkkgdadVz\"\n          },\n          \"datasourceId\": 1,\n          \"queryType\": \"query\",\n          \"rawQuery\": true,\n          \"refId\": \"A\",\n          \"target\": \"select symbol, price_volume_multiply, ingest_timestamp from running_averages_15_sec where symbol='$ticker';\"\n        }\n      ],\n      \"title\": \"Volume-Weighted Average Price from last 15 seconds\",\n      \"type\": \"table\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"hadesarchitect-cassandra-datasource\",\n        \"uid\": \"zkkgdadVz\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 15,\n        \"x\": 0,\n        \"y\": 11\n      },\n      \"id\": 4,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"hadesarchitect-cassandra-datasource\",\n            \"uid\": \"zkkgdadVz\"\n          },\n          \"datasourceId\": 1,\n          \"queryType\": \"query\",\n          \"rawQuery\": true,\n          \"refId\": \"A\",\n          \"target\": \"select symbol, volume, trade_timestamp from trades where symbol = '$ticker' and trade_timestamp\u003e$__timeFrom and trade_timestamp\u003c$__timeTo;\"\n        }\n      ],\n      \"timeFrom\": \"5m\",\n      \"title\": \"Volume\",\n      \"type\": \"timeseries\"\n    }\n  ],\n  \"refresh\": \"1000ms\",\n  \"schemaVersion\": 37,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"BINANCE:BTCUSDT\",\n          \"value\": \"BINANCE:BTCUSDT\"\n        },\n        \"datasource\": {\n          \"type\": \"hadesarchitect-cassandra-datasource\",\n          \"uid\": \"zkkgdadVz\"\n        },\n        \"definition\": \"SELECT DISTINCT symbol FROM crypto_market_ksp. Trades;\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Crypto Ticker\",\n        \"multi\": false,\n        \"name\": \"ticker\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"SELECT DISTINCT symbol FROM crypto_market_ksp. Trades;\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"type\": \"query\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-6h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"1s\", \"2s\", \"30s\", \"5m\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Finnhub RealTime Dashboard\",\n  \"uid\": \"zqy8jRdIk\",\n  \"version\": 3,\n  \"weekStart\": \"\"\n}"
            },
            "id": "grafana/grafana-dashboard-pipeline",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "grafana_dashboard": "1"
                },
                "name": "grafana-dashboard-pipeline",
                "namespace": "grafana",
                "resource_version": "1310268",
                "uid": "bb21a75a-09c8-41df-851e-2a4debc1e8b5"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.grafana-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "grafana-provisioning-dashboards",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "dashboard.yaml": "apiVersion: 1\n\nproviders:\n  # \u003cstring\u003e an unique provider name. Required\n  - name: 'default'\n    # \u003cint\u003e Org id. Default to 1\n    orgId: 1\n    # \u003cstring\u003e name of the dashboard folder.\n    folder: ''\n    # \u003cstring\u003e provider type. Default to 'file'\n    type: file\n    # \u003cbool\u003e disable dashboard deletion\n    disableDeletion: false\n    # \u003cint\u003e how often Grafana will scan for changed dashboards\n    updateIntervalSeconds: 10\n    options:\n      path: /var/lib/grafana/dashboards"
            },
            "id": "grafana/grafana-provisioning-dashboards",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "grafana-provisioning-dashboards",
                "namespace": "grafana",
                "resource_version": "1310264",
                "uid": "c6abe6f1-3410-4175-802c-c23bea839f11"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.grafana-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "grafana-provisioning-datasources",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "cassandra.yaml": "apiVersion: 1\n\ndeleteDatasources:\n  - name: Apache Cassandra-1\n    orgId: 1\n\ndatasources:\n  - name: Apache Cassandra-1\n    type: hadesarchitect-cassandra-datasource\n    access: proxy\n    orgId: 1\n    uid: zkkgdadVz\n    url: cassandra.pipeline.svc.cluster.local:9042\n    user:\n    database:\n    basicAuth:\n    basicAuthUser: cassandra\n    withCredentials:\n    isDefault:\n    jsonData:\n      consistency: ONE\n      keyspace: crypto_market_ksp\n      user: cassandra\n    secureJsonData:\n      tlsCACert: '...'\n      tlsClientCert: '...'\n      tlsClientKey: '...'\n      password: cassandra\n      basicAuthPassword: cassandra\n    version: 1\n    editable: false"
            },
            "id": "grafana/grafana-provisioning-datasources",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "grafana-provisioning-datasources",
                "namespace": "grafana",
                "resource_version": "1310267",
                "uid": "2951e0cd-4bb3-4c1b-8ad5-7a4e1efc766b"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.grafana-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "pipeline-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "CASSANDRA_HOST": "cassandra.pipeline.svc.cluster.local",
              "CASSANDRA_KEYSPACE": "crypto_market_ksp",
              "CASSANDRA_PORT": "9042",
              "CASSANDRA_TABLE_AGGREGATES": "running_averages_15_sec",
              "CASSANDRA_TABLE_TRADES": "trades",
              "FINNHUB_STOCKS_TICKERS": "[\"BINANCE:BTCUSDT\",\"BINANCE:ETHUSDT\",\"BINANCE:BNBUSDT\",\"BINANCE:DOGEUSDT\",\"BINANCE:XRPUSDT\"]",
              "FINNHUB_VALIDATE_TICKERS": "1",
              "KAFKA_MIN_PARTITIONS": "1",
              "KAFKA_PORT": "9092",
              "KAFKA_SERVER": "kafka-service.pipeline.svc.cluster.local",
              "KAFKA_TOPIC_NAME": "crypto-market",
              "SPARK_DEPRECATED_OFFSETS": "False",
              "SPARK_MASTER": "spark://spark-master:7077",
              "SPARK_MAX_OFFSETS_PER_TRIGGER": "100",
              "SPARK_SHUFFLE_PARTITIONS": "4"
            },
            "id": "pipeline/pipeline-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "pipeline-config",
                "namespace": "pipeline",
                "resource_version": "1311633",
                "uid": "8fdf88cf-6503-4487-9d60-d0b7cd8fb801"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "cassandra_web",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "pipeline/cassandra-web",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "cassandra-web"
                },
                "name": "cassandra-web",
                "namespace": "pipeline",
                "resource_version": "1310332",
                "uid": "2220d7a1-9bfa-4d8b-84c1-0e6657598899"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "cassandra-web"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "cassandra-web"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [
                              {
                                "name": "CASSANDRA_HOST",
                                "value": "cassandra",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_PORT",
                                "value": "9042",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_USERNAME",
                                "value": "cassandra",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_PASSWORD",
                                "value": "cassandra",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "ipushc/cassandra-web:v1.1.5",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "cassandra-web",
                            "port": [
                              {
                                "container_port": 8083,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "finnhub-producer",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "pipeline/finnhub-producer",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "finnhub-producer",
                "namespace": "pipeline",
                "resource_version": "1310664",
                "uid": "7799d523-f072-4bc0-9988-9fd4412f720c"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "finnhub-producer"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "finnhub-producer",
                          "pipeline-network": "true"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "pipeline-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              },
                              {
                                "config_map_ref": [],
                                "prefix": "",
                                "secret_ref": [
                                  {
                                    "name": "pipeline-secrets",
                                    "optional": false
                                  }
                                ]
                              }
                            ],
                            "image": "20079741phu1905/finnhubproducer:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "finnhub-producer",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.cassandra_setup_keyspace_tables",
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.kafka-volume",
            "kubernetes_stateful_set.cassandra",
            "kubernetes_stateful_set.kafka"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "grafana/grafana",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "grafana"
                },
                "name": "grafana",
                "namespace": "grafana",
                "resource_version": "1310643",
                "uid": "e92f85e9-7f4f-493f-a20f-ad0e374849a0"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "grafana"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "grafana",
                          "pipeline-network": "true"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [
                              {
                                "name": "GF_AUTH_ANONYMOUS_ENABLED",
                                "value": "true",
                                "value_from": []
                              },
                              {
                                "name": "GF_INSTALL_PLUGINS",
                                "value": "hadesarchitect-cassandra-datasource",
                                "value_from": []
                              },
                              {
                                "name": "GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH",
                                "value": "/var/lib/grafana/dashboards/dashboard_pipeline.json",
                                "value_from": []
                              },
                              {
                                "name": "GF_DASHBOARDS_MIN_REFRESH_INTERVAL",
                                "value": "1s",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "grafana/grafana:11.3.2",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "grafana",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/var/lib/grafana",
                                "mount_propagation": "None",
                                "name": "grafana-pvc",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/var/lib/grafana/dashboards",
                                "mount_propagation": "None",
                                "name": "grafana-dashboard-pipeline",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/etc/grafana/provisioning/datasources",
                                "mount_propagation": "None",
                                "name": "grafana-provisioning-datasources",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/etc/grafana/provisioning/dashboards",
                                "mount_propagation": "None",
                                "name": "grafana-provisioning-dashboards",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "grafana-dashboard-pipeline",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "grafana-dashboard-pipeline",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "grafana-provisioning-datasources",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "grafana-provisioning-datasources",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "grafana-provisioning-dashboards",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "grafana-provisioning-dashboards",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "grafana-pvc",
                            "nfs": [],
                            "persistent_volume_claim": [
                              {
                                "claim_name": "grafana-pvc",
                                "read_only": false
                              }
                            ],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "kubernetes_config_map.cassandra_setup_keyspace_tables",
            "kubernetes_config_map.grafana-dashboard-pipeline",
            "kubernetes_config_map.grafana-provisioning-dashboards",
            "kubernetes_config_map.grafana-provisioning-datasources",
            "kubernetes_namespace.grafana-namespace",
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.grafana-pv",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.grafana-pvc",
            "kubernetes_persistent_volume_claim.kafka-volume",
            "kubernetes_stateful_set.cassandra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "stream-processor",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "sparkoperator.k8s.io/v1beta2",
                "kind": "SparkApplication",
                "metadata": {
                  "name": "stream-processor",
                  "namespace": "pipeline"
                },
                "spec": {
                  "driver": {
                    "cores": 2,
                    "envFrom": [
                      {
                        "configMapRef": {
                          "name": "pipeline-config"
                        }
                      },
                      {
                        "secretRef": {
                          "name": "pipeline-secrets"
                        }
                      }
                    ],
                    "labels": {
                      "version": "3.4.4"
                    },
                    "memory": "1g",
                    "serviceAccount": "spark-sa"
                  },
                  "executor": {
                    "cores": 2,
                    "envFrom": [
                      {
                        "configMapRef": {
                          "name": "pipeline-config"
                        }
                      },
                      {
                        "secretRef": {
                          "name": "pipeline-secrets"
                        }
                      }
                    ],
                    "instances": 2,
                    "labels": {
                      "version": "3.4.4"
                    },
                    "memory": "2100m"
                  },
                  "image": "20079741phu1905/streamprocessor:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "mainApplicationFile": "local:///app/src/StreamProcessor.py",
                  "mode": "cluster",
                  "restartPolicy": {
                    "type": "Always"
                  },
                  "sparkVersion": "3.4.4",
                  "type": "Python"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "driver": [
                        "object",
                        {
                          "cores": "number",
                          "envFrom": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "configMapRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              [
                                "object",
                                {
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ]
                                }
                              ]
                            ]
                          ],
                          "labels": [
                            "object",
                            {
                              "version": "string"
                            }
                          ],
                          "memory": "string",
                          "serviceAccount": "string"
                        }
                      ],
                      "executor": [
                        "object",
                        {
                          "cores": "number",
                          "envFrom": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "configMapRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              [
                                "object",
                                {
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ]
                                }
                              ]
                            ]
                          ],
                          "instances": "number",
                          "labels": [
                            "object",
                            {
                              "version": "string"
                            }
                          ],
                          "memory": "string"
                        }
                      ],
                      "image": "string",
                      "imagePullPolicy": "string",
                      "mainApplicationFile": "string",
                      "mode": "string",
                      "restartPolicy": [
                        "object",
                        {
                          "type": "string"
                        }
                      ],
                      "sparkVersion": "string",
                      "type": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "sparkoperator.k8s.io/v1beta2",
                "kind": "SparkApplication",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "stream-processor",
                  "namespace": "pipeline",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "arguments": null,
                  "batchScheduler": null,
                  "batchSchedulerOptions": {
                    "priorityClassName": null,
                    "queue": null,
                    "resources": null
                  },
                  "deps": {
                    "excludePackages": null,
                    "files": null,
                    "jars": null,
                    "packages": null,
                    "pyFiles": null,
                    "repositories": null
                  },
                  "driver": {
                    "affinity": {
                      "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": null,
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "nodeSelectorTerms": null
                        }
                      },
                      "podAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": null,
                        "requiredDuringSchedulingIgnoredDuringExecution": null
                      },
                      "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": null,
                        "requiredDuringSchedulingIgnoredDuringExecution": null
                      }
                    },
                    "annotations": null,
                    "configMaps": null,
                    "coreLimit": null,
                    "coreRequest": null,
                    "cores": 2,
                    "dnsConfig": {
                      "nameservers": null,
                      "options": null,
                      "searches": null
                    },
                    "env": null,
                    "envFrom": [
                      {
                        "configMapRef": {
                          "name": "pipeline-config",
                          "optional": null
                        },
                        "prefix": null,
                        "secretRef": {
                          "name": null,
                          "optional": null
                        }
                      },
                      {
                        "configMapRef": {
                          "name": null,
                          "optional": null
                        },
                        "prefix": null,
                        "secretRef": {
                          "name": "pipeline-secrets",
                          "optional": null
                        }
                      }
                    ],
                    "envSecretKeyRefs": null,
                    "envVars": null,
                    "gpu": {
                      "name": null,
                      "quantity": null
                    },
                    "hostAliases": null,
                    "hostNetwork": null,
                    "image": null,
                    "initContainers": null,
                    "javaOptions": null,
                    "kubernetesMaster": null,
                    "labels": {
                      "version": "3.4.4"
                    },
                    "lifecycle": {
                      "postStart": {
                        "exec": {
                          "command": null
                        },
                        "httpGet": {
                          "host": null,
                          "httpHeaders": null,
                          "path": null,
                          "port": null,
                          "scheme": null
                        },
                        "sleep": {
                          "seconds": null
                        },
                        "tcpSocket": {
                          "host": null,
                          "port": null
                        }
                      },
                      "preStop": {
                        "exec": {
                          "command": null
                        },
                        "httpGet": {
                          "host": null,
                          "httpHeaders": null,
                          "path": null,
                          "port": null,
                          "scheme": null
                        },
                        "sleep": {
                          "seconds": null
                        },
                        "tcpSocket": {
                          "host": null,
                          "port": null
                        }
                      }
                    },
                    "memory": "1g",
                    "memoryOverhead": null,
                    "nodeSelector": null,
                    "podName": null,
                    "podSecurityContext": {
                      "fsGroup": null,
                      "fsGroupChangePolicy": null,
                      "runAsGroup": null,
                      "runAsNonRoot": null,
                      "runAsUser": null,
                      "seLinuxOptions": {
                        "level": null,
                        "role": null,
                        "type": null,
                        "user": null
                      },
                      "seccompProfile": {
                        "localhostProfile": null,
                        "type": null
                      },
                      "supplementalGroups": null,
                      "sysctls": null,
                      "windowsOptions": {
                        "gmsaCredentialSpec": null,
                        "gmsaCredentialSpecName": null,
                        "hostProcess": null,
                        "runAsUserName": null
                      }
                    },
                    "ports": null,
                    "priorityClassName": null,
                    "schedulerName": null,
                    "secrets": null,
                    "securityContext": {
                      "allowPrivilegeEscalation": null,
                      "capabilities": {
                        "add": null,
                        "drop": null
                      },
                      "privileged": null,
                      "procMount": null,
                      "readOnlyRootFilesystem": null,
                      "runAsGroup": null,
                      "runAsNonRoot": null,
                      "runAsUser": null,
                      "seLinuxOptions": {
                        "level": null,
                        "role": null,
                        "type": null,
                        "user": null
                      },
                      "seccompProfile": {
                        "localhostProfile": null,
                        "type": null
                      },
                      "windowsOptions": {
                        "gmsaCredentialSpec": null,
                        "gmsaCredentialSpecName": null,
                        "hostProcess": null,
                        "runAsUserName": null
                      }
                    },
                    "serviceAccount": "spark-sa",
                    "serviceAnnotations": null,
                    "serviceLabels": null,
                    "shareProcessNamespace": null,
                    "sidecars": null,
                    "terminationGracePeriodSeconds": null,
                    "tolerations": null,
                    "volumeMounts": null
                  },
                  "driverIngressOptions": null,
                  "dynamicAllocation": {
                    "enabled": null,
                    "initialExecutors": null,
                    "maxExecutors": null,
                    "minExecutors": null,
                    "shuffleTrackingTimeout": null
                  },
                  "executor": {
                    "affinity": {
                      "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": null,
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "nodeSelectorTerms": null
                        }
                      },
                      "podAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": null,
                        "requiredDuringSchedulingIgnoredDuringExecution": null
                      },
                      "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": null,
                        "requiredDuringSchedulingIgnoredDuringExecution": null
                      }
                    },
                    "annotations": null,
                    "configMaps": null,
                    "coreLimit": null,
                    "coreRequest": null,
                    "cores": 2,
                    "deleteOnTermination": null,
                    "dnsConfig": {
                      "nameservers": null,
                      "options": null,
                      "searches": null
                    },
                    "env": null,
                    "envFrom": [
                      {
                        "configMapRef": {
                          "name": "pipeline-config",
                          "optional": null
                        },
                        "prefix": null,
                        "secretRef": {
                          "name": null,
                          "optional": null
                        }
                      },
                      {
                        "configMapRef": {
                          "name": null,
                          "optional": null
                        },
                        "prefix": null,
                        "secretRef": {
                          "name": "pipeline-secrets",
                          "optional": null
                        }
                      }
                    ],
                    "envSecretKeyRefs": null,
                    "envVars": null,
                    "gpu": {
                      "name": null,
                      "quantity": null
                    },
                    "hostAliases": null,
                    "hostNetwork": null,
                    "image": null,
                    "initContainers": null,
                    "instances": 2,
                    "javaOptions": null,
                    "labels": {
                      "version": "3.4.4"
                    },
                    "lifecycle": {
                      "postStart": {
                        "exec": {
                          "command": null
                        },
                        "httpGet": {
                          "host": null,
                          "httpHeaders": null,
                          "path": null,
                          "port": null,
                          "scheme": null
                        },
                        "sleep": {
                          "seconds": null
                        },
                        "tcpSocket": {
                          "host": null,
                          "port": null
                        }
                      },
                      "preStop": {
                        "exec": {
                          "command": null
                        },
                        "httpGet": {
                          "host": null,
                          "httpHeaders": null,
                          "path": null,
                          "port": null,
                          "scheme": null
                        },
                        "sleep": {
                          "seconds": null
                        },
                        "tcpSocket": {
                          "host": null,
                          "port": null
                        }
                      }
                    },
                    "memory": "2100m",
                    "memoryOverhead": null,
                    "nodeSelector": null,
                    "podSecurityContext": {
                      "fsGroup": null,
                      "fsGroupChangePolicy": null,
                      "runAsGroup": null,
                      "runAsNonRoot": null,
                      "runAsUser": null,
                      "seLinuxOptions": {
                        "level": null,
                        "role": null,
                        "type": null,
                        "user": null
                      },
                      "seccompProfile": {
                        "localhostProfile": null,
                        "type": null
                      },
                      "supplementalGroups": null,
                      "sysctls": null,
                      "windowsOptions": {
                        "gmsaCredentialSpec": null,
                        "gmsaCredentialSpecName": null,
                        "hostProcess": null,
                        "runAsUserName": null
                      }
                    },
                    "ports": null,
                    "priorityClassName": null,
                    "schedulerName": null,
                    "secrets": null,
                    "securityContext": {
                      "allowPrivilegeEscalation": null,
                      "capabilities": {
                        "add": null,
                        "drop": null
                      },
                      "privileged": null,
                      "procMount": null,
                      "readOnlyRootFilesystem": null,
                      "runAsGroup": null,
                      "runAsNonRoot": null,
                      "runAsUser": null,
                      "seLinuxOptions": {
                        "level": null,
                        "role": null,
                        "type": null,
                        "user": null
                      },
                      "seccompProfile": {
                        "localhostProfile": null,
                        "type": null
                      },
                      "windowsOptions": {
                        "gmsaCredentialSpec": null,
                        "gmsaCredentialSpecName": null,
                        "hostProcess": null,
                        "runAsUserName": null
                      }
                    },
                    "serviceAccount": null,
                    "shareProcessNamespace": null,
                    "sidecars": null,
                    "terminationGracePeriodSeconds": null,
                    "tolerations": null,
                    "volumeMounts": null
                  },
                  "failureRetries": null,
                  "hadoopConf": null,
                  "hadoopConfigMap": null,
                  "image": "20079741phu1905/streamprocessor:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "imagePullSecrets": null,
                  "mainApplicationFile": "local:///app/src/StreamProcessor.py",
                  "mainClass": null,
                  "memoryOverheadFactor": null,
                  "mode": "cluster",
                  "monitoring": {
                    "exposeDriverMetrics": null,
                    "exposeExecutorMetrics": null,
                    "metricsProperties": null,
                    "metricsPropertiesFile": null,
                    "prometheus": {
                      "configFile": null,
                      "configuration": null,
                      "jmxExporterJar": null,
                      "port": null,
                      "portName": null
                    }
                  },
                  "nodeSelector": null,
                  "proxyUser": null,
                  "pythonVersion": null,
                  "restartPolicy": {
                    "onFailureRetries": null,
                    "onFailureRetryInterval": 5,
                    "onSubmissionFailureRetries": null,
                    "onSubmissionFailureRetryInterval": 5,
                    "type": "Always"
                  },
                  "retryInterval": null,
                  "sparkConf": null,
                  "sparkConfigMap": null,
                  "sparkUIOptions": {
                    "ingressAnnotations": null,
                    "ingressTLS": null,
                    "serviceAnnotations": null,
                    "serviceLabels": null,
                    "servicePort": null,
                    "servicePortName": null,
                    "serviceType": null
                  },
                  "sparkVersion": "3.4.4",
                  "timeToLiveSeconds": null,
                  "type": "Python",
                  "volumes": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "arguments": [
                        "list",
                        "string"
                      ],
                      "batchScheduler": "string",
                      "batchSchedulerOptions": [
                        "object",
                        {
                          "priorityClassName": "string",
                          "queue": "string",
                          "resources": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "deps": [
                        "object",
                        {
                          "excludePackages": [
                            "list",
                            "string"
                          ],
                          "files": [
                            "list",
                            "string"
                          ],
                          "jars": [
                            "list",
                            "string"
                          ],
                          "packages": [
                            "list",
                            "string"
                          ],
                          "pyFiles": [
                            "list",
                            "string"
                          ],
                          "repositories": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "driver": [
                        "object",
                        {
                          "affinity": [
                            "object",
                            {
                              "nodeAffinity": [
                                "object",
                                {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "preference": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchFields": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ]
                                          }
                                        ],
                                        "weight": "number"
                                      }
                                    ]
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": [
                                    "object",
                                    {
                                      "nodeSelectorTerms": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchFields": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ]
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "podAffinity": [
                                "object",
                                {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "podAffinityTerm": [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "mismatchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "namespaceSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ],
                                        "weight": "number"
                                      }
                                    ]
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "labelSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "matchLabelKeys": [
                                          "list",
                                          "string"
                                        ],
                                        "mismatchLabelKeys": [
                                          "list",
                                          "string"
                                        ],
                                        "namespaceSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "namespaces": [
                                          "list",
                                          "string"
                                        ],
                                        "topologyKey": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "podAntiAffinity": [
                                "object",
                                {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "podAffinityTerm": [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "mismatchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "namespaceSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ],
                                        "weight": "number"
                                      }
                                    ]
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "labelSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "matchLabelKeys": [
                                          "list",
                                          "string"
                                        ],
                                        "mismatchLabelKeys": [
                                          "list",
                                          "string"
                                        ],
                                        "namespaceSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "namespaces": [
                                          "list",
                                          "string"
                                        ],
                                        "topologyKey": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "annotations": [
                            "map",
                            "string"
                          ],
                          "configMaps": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "path": "string"
                              }
                            ]
                          ],
                          "coreLimit": "string",
                          "coreRequest": "string",
                          "cores": "number",
                          "dnsConfig": [
                            "object",
                            {
                              "nameservers": [
                                "list",
                                "string"
                              ],
                              "options": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "searches": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "env": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "value": "string",
                                "valueFrom": [
                                  "object",
                                  {
                                    "configMapKeyRef": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "fieldRef": [
                                      "object",
                                      {
                                        "apiVersion": "string",
                                        "fieldPath": "string"
                                      }
                                    ],
                                    "resourceFieldRef": [
                                      "object",
                                      {
                                        "containerName": "string",
                                        "divisor": "string",
                                        "resource": "string"
                                      }
                                    ],
                                    "secretKeyRef": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ],
                          "envFrom": [
                            "list",
                            [
                              "object",
                              {
                                "configMapRef": [
                                  "object",
                                  {
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "prefix": "string",
                                "secretRef": [
                                  "object",
                                  {
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ]
                              }
                            ]
                          ],
                          "envSecretKeyRefs": [
                            "map",
                            [
                              "object",
                              {
                                "key": "string",
                                "name": "string"
                              }
                            ]
                          ],
                          "envVars": [
                            "map",
                            "string"
                          ],
                          "gpu": [
                            "object",
                            {
                              "name": "string",
                              "quantity": "number"
                            }
                          ],
                          "hostAliases": [
                            "list",
                            [
                              "object",
                              {
                                "hostnames": [
                                  "list",
                                  "string"
                                ],
                                "ip": "string"
                              }
                            ]
                          ],
                          "hostNetwork": "bool",
                          "image": "string",
                          "initContainers": [
                            "list",
                            [
                              "object",
                              {
                                "args": [
                                  "list",
                                  "string"
                                ],
                                "command": [
                                  "list",
                                  "string"
                                ],
                                "env": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "value": "string",
                                      "valueFrom": [
                                        "object",
                                        {
                                          "configMapKeyRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "fieldRef": [
                                            "object",
                                            {
                                              "apiVersion": "string",
                                              "fieldPath": "string"
                                            }
                                          ],
                                          "resourceFieldRef": [
                                            "object",
                                            {
                                              "containerName": "string",
                                              "divisor": "string",
                                              "resource": "string"
                                            }
                                          ],
                                          "secretKeyRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ],
                                "envFrom": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "configMapRef": [
                                        "object",
                                        {
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ],
                                      "prefix": "string",
                                      "secretRef": [
                                        "object",
                                        {
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ]
                                    }
                                  ]
                                ],
                                "image": "string",
                                "imagePullPolicy": "string",
                                "lifecycle": [
                                  "object",
                                  {
                                    "postStart": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "sleep": [
                                          "object",
                                          {
                                            "seconds": "number"
                                          }
                                        ],
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "preStop": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "sleep": [
                                          "object",
                                          {
                                            "seconds": "number"
                                          }
                                        ],
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "livenessProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "name": "string",
                                "ports": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "containerPort": "number",
                                      "hostIP": "string",
                                      "hostPort": "number",
                                      "name": "string",
                                      "protocol": "string"
                                    }
                                  ]
                                ],
                                "readinessProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "resizePolicy": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "resourceName": "string",
                                      "restartPolicy": "string"
                                    }
                                  ]
                                ],
                                "resources": [
                                  "object",
                                  {
                                    "claims": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "limits": [
                                      "map",
                                      "string"
                                    ],
                                    "requests": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ],
                                "restartPolicy": "string",
                                "securityContext": [
                                  "object",
                                  {
                                    "allowPrivilegeEscalation": "bool",
                                    "capabilities": [
                                      "object",
                                      {
                                        "add": [
                                          "list",
                                          "string"
                                        ],
                                        "drop": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "privileged": "bool",
                                    "procMount": "string",
                                    "readOnlyRootFilesystem": "bool",
                                    "runAsGroup": "number",
                                    "runAsNonRoot": "bool",
                                    "runAsUser": "number",
                                    "seLinuxOptions": [
                                      "object",
                                      {
                                        "level": "string",
                                        "role": "string",
                                        "type": "string",
                                        "user": "string"
                                      }
                                    ],
                                    "seccompProfile": [
                                      "object",
                                      {
                                        "localhostProfile": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "windowsOptions": [
                                      "object",
                                      {
                                        "gmsaCredentialSpec": "string",
                                        "gmsaCredentialSpecName": "string",
                                        "hostProcess": "bool",
                                        "runAsUserName": "string"
                                      }
                                    ]
                                  }
                                ],
                                "startupProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "stdin": "bool",
                                "stdinOnce": "bool",
                                "terminationMessagePath": "string",
                                "terminationMessagePolicy": "string",
                                "tty": "bool",
                                "volumeDevices": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "devicePath": "string",
                                      "name": "string"
                                    }
                                  ]
                                ],
                                "volumeMounts": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "mountPath": "string",
                                      "mountPropagation": "string",
                                      "name": "string",
                                      "readOnly": "bool",
                                      "subPath": "string",
                                      "subPathExpr": "string"
                                    }
                                  ]
                                ],
                                "workingDir": "string"
                              }
                            ]
                          ],
                          "javaOptions": "string",
                          "kubernetesMaster": "string",
                          "labels": [
                            "map",
                            "string"
                          ],
                          "lifecycle": [
                            "object",
                            {
                              "postStart": [
                                "object",
                                {
                                  "exec": [
                                    "object",
                                    {
                                      "command": [
                                        "list",
                                        "string"
                                      ]
                                    }
                                  ],
                                  "httpGet": [
                                    "object",
                                    {
                                      "host": "string",
                                      "httpHeaders": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "path": "string",
                                      "port": "string",
                                      "scheme": "string"
                                    }
                                  ],
                                  "sleep": [
                                    "object",
                                    {
                                      "seconds": "number"
                                    }
                                  ],
                                  "tcpSocket": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": "string"
                                    }
                                  ]
                                }
                              ],
                              "preStop": [
                                "object",
                                {
                                  "exec": [
                                    "object",
                                    {
                                      "command": [
                                        "list",
                                        "string"
                                      ]
                                    }
                                  ],
                                  "httpGet": [
                                    "object",
                                    {
                                      "host": "string",
                                      "httpHeaders": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "path": "string",
                                      "port": "string",
                                      "scheme": "string"
                                    }
                                  ],
                                  "sleep": [
                                    "object",
                                    {
                                      "seconds": "number"
                                    }
                                  ],
                                  "tcpSocket": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": "string"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "memory": "string",
                          "memoryOverhead": "string",
                          "nodeSelector": [
                            "map",
                            "string"
                          ],
                          "podName": "string",
                          "podSecurityContext": [
                            "object",
                            {
                              "fsGroup": "number",
                              "fsGroupChangePolicy": "string",
                              "runAsGroup": "number",
                              "runAsNonRoot": "bool",
                              "runAsUser": "number",
                              "seLinuxOptions": [
                                "object",
                                {
                                  "level": "string",
                                  "role": "string",
                                  "type": "string",
                                  "user": "string"
                                }
                              ],
                              "seccompProfile": [
                                "object",
                                {
                                  "localhostProfile": "string",
                                  "type": "string"
                                }
                              ],
                              "supplementalGroups": [
                                "list",
                                "number"
                              ],
                              "sysctls": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "windowsOptions": [
                                "object",
                                {
                                  "gmsaCredentialSpec": "string",
                                  "gmsaCredentialSpecName": "string",
                                  "hostProcess": "bool",
                                  "runAsUserName": "string"
                                }
                              ]
                            }
                          ],
                          "ports": [
                            "list",
                            [
                              "object",
                              {
                                "containerPort": "number",
                                "name": "string",
                                "protocol": "string"
                              }
                            ]
                          ],
                          "priorityClassName": "string",
                          "schedulerName": "string",
                          "secrets": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "path": "string",
                                "secretType": "string"
                              }
                            ]
                          ],
                          "securityContext": [
                            "object",
                            {
                              "allowPrivilegeEscalation": "bool",
                              "capabilities": [
                                "object",
                                {
                                  "add": [
                                    "list",
                                    "string"
                                  ],
                                  "drop": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "privileged": "bool",
                              "procMount": "string",
                              "readOnlyRootFilesystem": "bool",
                              "runAsGroup": "number",
                              "runAsNonRoot": "bool",
                              "runAsUser": "number",
                              "seLinuxOptions": [
                                "object",
                                {
                                  "level": "string",
                                  "role": "string",
                                  "type": "string",
                                  "user": "string"
                                }
                              ],
                              "seccompProfile": [
                                "object",
                                {
                                  "localhostProfile": "string",
                                  "type": "string"
                                }
                              ],
                              "windowsOptions": [
                                "object",
                                {
                                  "gmsaCredentialSpec": "string",
                                  "gmsaCredentialSpecName": "string",
                                  "hostProcess": "bool",
                                  "runAsUserName": "string"
                                }
                              ]
                            }
                          ],
                          "serviceAccount": "string",
                          "serviceAnnotations": [
                            "map",
                            "string"
                          ],
                          "serviceLabels": [
                            "map",
                            "string"
                          ],
                          "shareProcessNamespace": "bool",
                          "sidecars": [
                            "list",
                            [
                              "object",
                              {
                                "args": [
                                  "list",
                                  "string"
                                ],
                                "command": [
                                  "list",
                                  "string"
                                ],
                                "env": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "value": "string",
                                      "valueFrom": [
                                        "object",
                                        {
                                          "configMapKeyRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "fieldRef": [
                                            "object",
                                            {
                                              "apiVersion": "string",
                                              "fieldPath": "string"
                                            }
                                          ],
                                          "resourceFieldRef": [
                                            "object",
                                            {
                                              "containerName": "string",
                                              "divisor": "string",
                                              "resource": "string"
                                            }
                                          ],
                                          "secretKeyRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ],
                                "envFrom": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "configMapRef": [
                                        "object",
                                        {
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ],
                                      "prefix": "string",
                                      "secretRef": [
                                        "object",
                                        {
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ]
                                    }
                                  ]
                                ],
                                "image": "string",
                                "imagePullPolicy": "string",
                                "lifecycle": [
                                  "object",
                                  {
                                    "postStart": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "sleep": [
                                          "object",
                                          {
                                            "seconds": "number"
                                          }
                                        ],
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "preStop": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "sleep": [
                                          "object",
                                          {
                                            "seconds": "number"
                                          }
                                        ],
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "livenessProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "name": "string",
                                "ports": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "containerPort": "number",
                                      "hostIP": "string",
                                      "hostPort": "number",
                                      "name": "string",
                                      "protocol": "string"
                                    }
                                  ]
                                ],
                                "readinessProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "resizePolicy": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "resourceName": "string",
                                      "restartPolicy": "string"
                                    }
                                  ]
                                ],
                                "resources": [
                                  "object",
                                  {
                                    "claims": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "limits": [
                                      "map",
                                      "string"
                                    ],
                                    "requests": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ],
                                "restartPolicy": "string",
                                "securityContext": [
                                  "object",
                                  {
                                    "allowPrivilegeEscalation": "bool",
                                    "capabilities": [
                                      "object",
                                      {
                                        "add": [
                                          "list",
                                          "string"
                                        ],
                                        "drop": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "privileged": "bool",
                                    "procMount": "string",
                                    "readOnlyRootFilesystem": "bool",
                                    "runAsGroup": "number",
                                    "runAsNonRoot": "bool",
                                    "runAsUser": "number",
                                    "seLinuxOptions": [
                                      "object",
                                      {
                                        "level": "string",
                                        "role": "string",
                                        "type": "string",
                                        "user": "string"
                                      }
                                    ],
                                    "seccompProfile": [
                                      "object",
                                      {
                                        "localhostProfile": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "windowsOptions": [
                                      "object",
                                      {
                                        "gmsaCredentialSpec": "string",
                                        "gmsaCredentialSpecName": "string",
                                        "hostProcess": "bool",
                                        "runAsUserName": "string"
                                      }
                                    ]
                                  }
                                ],
                                "startupProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "stdin": "bool",
                                "stdinOnce": "bool",
                                "terminationMessagePath": "string",
                                "terminationMessagePolicy": "string",
                                "tty": "bool",
                                "volumeDevices": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "devicePath": "string",
                                      "name": "string"
                                    }
                                  ]
                                ],
                                "volumeMounts": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "mountPath": "string",
                                      "mountPropagation": "string",
                                      "name": "string",
                                      "readOnly": "bool",
                                      "subPath": "string",
                                      "subPathExpr": "string"
                                    }
                                  ]
                                ],
                                "workingDir": "string"
                              }
                            ]
                          ],
                          "terminationGracePeriodSeconds": "number",
                          "tolerations": [
                            "list",
                            [
                              "object",
                              {
                                "effect": "string",
                                "key": "string",
                                "operator": "string",
                                "tolerationSeconds": "number",
                                "value": "string"
                              }
                            ]
                          ],
                          "volumeMounts": [
                            "list",
                            [
                              "object",
                              {
                                "mountPath": "string",
                                "mountPropagation": "string",
                                "name": "string",
                                "readOnly": "bool",
                                "subPath": "string",
                                "subPathExpr": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "driverIngressOptions": [
                        "list",
                        [
                          "object",
                          {
                            "ingressAnnotations": [
                              "map",
                              "string"
                            ],
                            "ingressTLS": [
                              "list",
                              [
                                "object",
                                {
                                  "hosts": [
                                    "list",
                                    "string"
                                  ],
                                  "secretName": "string"
                                }
                              ]
                            ],
                            "ingressURLFormat": "string",
                            "serviceAnnotations": [
                              "map",
                              "string"
                            ],
                            "serviceLabels": [
                              "map",
                              "string"
                            ],
                            "servicePort": "number",
                            "servicePortName": "string",
                            "serviceType": "string"
                          }
                        ]
                      ],
                      "dynamicAllocation": [
                        "object",
                        {
                          "enabled": "bool",
                          "initialExecutors": "number",
                          "maxExecutors": "number",
                          "minExecutors": "number",
                          "shuffleTrackingTimeout": "number"
                        }
                      ],
                      "executor": [
                        "object",
                        {
                          "affinity": [
                            "object",
                            {
                              "nodeAffinity": [
                                "object",
                                {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "preference": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchFields": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ]
                                          }
                                        ],
                                        "weight": "number"
                                      }
                                    ]
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": [
                                    "object",
                                    {
                                      "nodeSelectorTerms": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchFields": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ]
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "podAffinity": [
                                "object",
                                {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "podAffinityTerm": [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "mismatchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "namespaceSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ],
                                        "weight": "number"
                                      }
                                    ]
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "labelSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "matchLabelKeys": [
                                          "list",
                                          "string"
                                        ],
                                        "mismatchLabelKeys": [
                                          "list",
                                          "string"
                                        ],
                                        "namespaceSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "namespaces": [
                                          "list",
                                          "string"
                                        ],
                                        "topologyKey": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "podAntiAffinity": [
                                "object",
                                {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "podAffinityTerm": [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "mismatchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "namespaceSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ],
                                        "weight": "number"
                                      }
                                    ]
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "labelSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "matchLabelKeys": [
                                          "list",
                                          "string"
                                        ],
                                        "mismatchLabelKeys": [
                                          "list",
                                          "string"
                                        ],
                                        "namespaceSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "namespaces": [
                                          "list",
                                          "string"
                                        ],
                                        "topologyKey": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "annotations": [
                            "map",
                            "string"
                          ],
                          "configMaps": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "path": "string"
                              }
                            ]
                          ],
                          "coreLimit": "string",
                          "coreRequest": "string",
                          "cores": "number",
                          "deleteOnTermination": "bool",
                          "dnsConfig": [
                            "object",
                            {
                              "nameservers": [
                                "list",
                                "string"
                              ],
                              "options": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "searches": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "env": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "value": "string",
                                "valueFrom": [
                                  "object",
                                  {
                                    "configMapKeyRef": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "fieldRef": [
                                      "object",
                                      {
                                        "apiVersion": "string",
                                        "fieldPath": "string"
                                      }
                                    ],
                                    "resourceFieldRef": [
                                      "object",
                                      {
                                        "containerName": "string",
                                        "divisor": "string",
                                        "resource": "string"
                                      }
                                    ],
                                    "secretKeyRef": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ],
                          "envFrom": [
                            "list",
                            [
                              "object",
                              {
                                "configMapRef": [
                                  "object",
                                  {
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "prefix": "string",
                                "secretRef": [
                                  "object",
                                  {
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ]
                              }
                            ]
                          ],
                          "envSecretKeyRefs": [
                            "map",
                            [
                              "object",
                              {
                                "key": "string",
                                "name": "string"
                              }
                            ]
                          ],
                          "envVars": [
                            "map",
                            "string"
                          ],
                          "gpu": [
                            "object",
                            {
                              "name": "string",
                              "quantity": "number"
                            }
                          ],
                          "hostAliases": [
                            "list",
                            [
                              "object",
                              {
                                "hostnames": [
                                  "list",
                                  "string"
                                ],
                                "ip": "string"
                              }
                            ]
                          ],
                          "hostNetwork": "bool",
                          "image": "string",
                          "initContainers": [
                            "list",
                            [
                              "object",
                              {
                                "args": [
                                  "list",
                                  "string"
                                ],
                                "command": [
                                  "list",
                                  "string"
                                ],
                                "env": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "value": "string",
                                      "valueFrom": [
                                        "object",
                                        {
                                          "configMapKeyRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "fieldRef": [
                                            "object",
                                            {
                                              "apiVersion": "string",
                                              "fieldPath": "string"
                                            }
                                          ],
                                          "resourceFieldRef": [
                                            "object",
                                            {
                                              "containerName": "string",
                                              "divisor": "string",
                                              "resource": "string"
                                            }
                                          ],
                                          "secretKeyRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ],
                                "envFrom": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "configMapRef": [
                                        "object",
                                        {
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ],
                                      "prefix": "string",
                                      "secretRef": [
                                        "object",
                                        {
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ]
                                    }
                                  ]
                                ],
                                "image": "string",
                                "imagePullPolicy": "string",
                                "lifecycle": [
                                  "object",
                                  {
                                    "postStart": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "sleep": [
                                          "object",
                                          {
                                            "seconds": "number"
                                          }
                                        ],
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "preStop": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "sleep": [
                                          "object",
                                          {
                                            "seconds": "number"
                                          }
                                        ],
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "livenessProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "name": "string",
                                "ports": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "containerPort": "number",
                                      "hostIP": "string",
                                      "hostPort": "number",
                                      "name": "string",
                                      "protocol": "string"
                                    }
                                  ]
                                ],
                                "readinessProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "resizePolicy": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "resourceName": "string",
                                      "restartPolicy": "string"
                                    }
                                  ]
                                ],
                                "resources": [
                                  "object",
                                  {
                                    "claims": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "limits": [
                                      "map",
                                      "string"
                                    ],
                                    "requests": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ],
                                "restartPolicy": "string",
                                "securityContext": [
                                  "object",
                                  {
                                    "allowPrivilegeEscalation": "bool",
                                    "capabilities": [
                                      "object",
                                      {
                                        "add": [
                                          "list",
                                          "string"
                                        ],
                                        "drop": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "privileged": "bool",
                                    "procMount": "string",
                                    "readOnlyRootFilesystem": "bool",
                                    "runAsGroup": "number",
                                    "runAsNonRoot": "bool",
                                    "runAsUser": "number",
                                    "seLinuxOptions": [
                                      "object",
                                      {
                                        "level": "string",
                                        "role": "string",
                                        "type": "string",
                                        "user": "string"
                                      }
                                    ],
                                    "seccompProfile": [
                                      "object",
                                      {
                                        "localhostProfile": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "windowsOptions": [
                                      "object",
                                      {
                                        "gmsaCredentialSpec": "string",
                                        "gmsaCredentialSpecName": "string",
                                        "hostProcess": "bool",
                                        "runAsUserName": "string"
                                      }
                                    ]
                                  }
                                ],
                                "startupProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "stdin": "bool",
                                "stdinOnce": "bool",
                                "terminationMessagePath": "string",
                                "terminationMessagePolicy": "string",
                                "tty": "bool",
                                "volumeDevices": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "devicePath": "string",
                                      "name": "string"
                                    }
                                  ]
                                ],
                                "volumeMounts": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "mountPath": "string",
                                      "mountPropagation": "string",
                                      "name": "string",
                                      "readOnly": "bool",
                                      "subPath": "string",
                                      "subPathExpr": "string"
                                    }
                                  ]
                                ],
                                "workingDir": "string"
                              }
                            ]
                          ],
                          "instances": "number",
                          "javaOptions": "string",
                          "labels": [
                            "map",
                            "string"
                          ],
                          "lifecycle": [
                            "object",
                            {
                              "postStart": [
                                "object",
                                {
                                  "exec": [
                                    "object",
                                    {
                                      "command": [
                                        "list",
                                        "string"
                                      ]
                                    }
                                  ],
                                  "httpGet": [
                                    "object",
                                    {
                                      "host": "string",
                                      "httpHeaders": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "path": "string",
                                      "port": "string",
                                      "scheme": "string"
                                    }
                                  ],
                                  "sleep": [
                                    "object",
                                    {
                                      "seconds": "number"
                                    }
                                  ],
                                  "tcpSocket": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": "string"
                                    }
                                  ]
                                }
                              ],
                              "preStop": [
                                "object",
                                {
                                  "exec": [
                                    "object",
                                    {
                                      "command": [
                                        "list",
                                        "string"
                                      ]
                                    }
                                  ],
                                  "httpGet": [
                                    "object",
                                    {
                                      "host": "string",
                                      "httpHeaders": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "path": "string",
                                      "port": "string",
                                      "scheme": "string"
                                    }
                                  ],
                                  "sleep": [
                                    "object",
                                    {
                                      "seconds": "number"
                                    }
                                  ],
                                  "tcpSocket": [
                                    "object",
                                    {
                                      "host": "string",
                                      "port": "string"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "memory": "string",
                          "memoryOverhead": "string",
                          "nodeSelector": [
                            "map",
                            "string"
                          ],
                          "podSecurityContext": [
                            "object",
                            {
                              "fsGroup": "number",
                              "fsGroupChangePolicy": "string",
                              "runAsGroup": "number",
                              "runAsNonRoot": "bool",
                              "runAsUser": "number",
                              "seLinuxOptions": [
                                "object",
                                {
                                  "level": "string",
                                  "role": "string",
                                  "type": "string",
                                  "user": "string"
                                }
                              ],
                              "seccompProfile": [
                                "object",
                                {
                                  "localhostProfile": "string",
                                  "type": "string"
                                }
                              ],
                              "supplementalGroups": [
                                "list",
                                "number"
                              ],
                              "sysctls": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "windowsOptions": [
                                "object",
                                {
                                  "gmsaCredentialSpec": "string",
                                  "gmsaCredentialSpecName": "string",
                                  "hostProcess": "bool",
                                  "runAsUserName": "string"
                                }
                              ]
                            }
                          ],
                          "ports": [
                            "list",
                            [
                              "object",
                              {
                                "containerPort": "number",
                                "name": "string",
                                "protocol": "string"
                              }
                            ]
                          ],
                          "priorityClassName": "string",
                          "schedulerName": "string",
                          "secrets": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "path": "string",
                                "secretType": "string"
                              }
                            ]
                          ],
                          "securityContext": [
                            "object",
                            {
                              "allowPrivilegeEscalation": "bool",
                              "capabilities": [
                                "object",
                                {
                                  "add": [
                                    "list",
                                    "string"
                                  ],
                                  "drop": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "privileged": "bool",
                              "procMount": "string",
                              "readOnlyRootFilesystem": "bool",
                              "runAsGroup": "number",
                              "runAsNonRoot": "bool",
                              "runAsUser": "number",
                              "seLinuxOptions": [
                                "object",
                                {
                                  "level": "string",
                                  "role": "string",
                                  "type": "string",
                                  "user": "string"
                                }
                              ],
                              "seccompProfile": [
                                "object",
                                {
                                  "localhostProfile": "string",
                                  "type": "string"
                                }
                              ],
                              "windowsOptions": [
                                "object",
                                {
                                  "gmsaCredentialSpec": "string",
                                  "gmsaCredentialSpecName": "string",
                                  "hostProcess": "bool",
                                  "runAsUserName": "string"
                                }
                              ]
                            }
                          ],
                          "serviceAccount": "string",
                          "shareProcessNamespace": "bool",
                          "sidecars": [
                            "list",
                            [
                              "object",
                              {
                                "args": [
                                  "list",
                                  "string"
                                ],
                                "command": [
                                  "list",
                                  "string"
                                ],
                                "env": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "value": "string",
                                      "valueFrom": [
                                        "object",
                                        {
                                          "configMapKeyRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "fieldRef": [
                                            "object",
                                            {
                                              "apiVersion": "string",
                                              "fieldPath": "string"
                                            }
                                          ],
                                          "resourceFieldRef": [
                                            "object",
                                            {
                                              "containerName": "string",
                                              "divisor": "string",
                                              "resource": "string"
                                            }
                                          ],
                                          "secretKeyRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ],
                                "envFrom": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "configMapRef": [
                                        "object",
                                        {
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ],
                                      "prefix": "string",
                                      "secretRef": [
                                        "object",
                                        {
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ]
                                    }
                                  ]
                                ],
                                "image": "string",
                                "imagePullPolicy": "string",
                                "lifecycle": [
                                  "object",
                                  {
                                    "postStart": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "sleep": [
                                          "object",
                                          {
                                            "seconds": "number"
                                          }
                                        ],
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "preStop": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "sleep": [
                                          "object",
                                          {
                                            "seconds": "number"
                                          }
                                        ],
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "livenessProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "name": "string",
                                "ports": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "containerPort": "number",
                                      "hostIP": "string",
                                      "hostPort": "number",
                                      "name": "string",
                                      "protocol": "string"
                                    }
                                  ]
                                ],
                                "readinessProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "resizePolicy": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "resourceName": "string",
                                      "restartPolicy": "string"
                                    }
                                  ]
                                ],
                                "resources": [
                                  "object",
                                  {
                                    "claims": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "limits": [
                                      "map",
                                      "string"
                                    ],
                                    "requests": [
                                      "map",
                                      "string"
                                    ]
                                  }
                                ],
                                "restartPolicy": "string",
                                "securityContext": [
                                  "object",
                                  {
                                    "allowPrivilegeEscalation": "bool",
                                    "capabilities": [
                                      "object",
                                      {
                                        "add": [
                                          "list",
                                          "string"
                                        ],
                                        "drop": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "privileged": "bool",
                                    "procMount": "string",
                                    "readOnlyRootFilesystem": "bool",
                                    "runAsGroup": "number",
                                    "runAsNonRoot": "bool",
                                    "runAsUser": "number",
                                    "seLinuxOptions": [
                                      "object",
                                      {
                                        "level": "string",
                                        "role": "string",
                                        "type": "string",
                                        "user": "string"
                                      }
                                    ],
                                    "seccompProfile": [
                                      "object",
                                      {
                                        "localhostProfile": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "windowsOptions": [
                                      "object",
                                      {
                                        "gmsaCredentialSpec": "string",
                                        "gmsaCredentialSpecName": "string",
                                        "hostProcess": "bool",
                                        "runAsUserName": "string"
                                      }
                                    ]
                                  }
                                ],
                                "startupProbe": [
                                  "object",
                                  {
                                    "exec": [
                                      "object",
                                      {
                                        "command": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "failureThreshold": "number",
                                    "grpc": [
                                      "object",
                                      {
                                        "port": "number",
                                        "service": "string"
                                      }
                                    ],
                                    "httpGet": [
                                      "object",
                                      {
                                        "host": "string",
                                        "httpHeaders": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string",
                                        "port": "string",
                                        "scheme": "string"
                                      }
                                    ],
                                    "initialDelaySeconds": "number",
                                    "periodSeconds": "number",
                                    "successThreshold": "number",
                                    "tcpSocket": [
                                      "object",
                                      {
                                        "host": "string",
                                        "port": "string"
                                      }
                                    ],
                                    "terminationGracePeriodSeconds": "number",
                                    "timeoutSeconds": "number"
                                  }
                                ],
                                "stdin": "bool",
                                "stdinOnce": "bool",
                                "terminationMessagePath": "string",
                                "terminationMessagePolicy": "string",
                                "tty": "bool",
                                "volumeDevices": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "devicePath": "string",
                                      "name": "string"
                                    }
                                  ]
                                ],
                                "volumeMounts": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "mountPath": "string",
                                      "mountPropagation": "string",
                                      "name": "string",
                                      "readOnly": "bool",
                                      "subPath": "string",
                                      "subPathExpr": "string"
                                    }
                                  ]
                                ],
                                "workingDir": "string"
                              }
                            ]
                          ],
                          "terminationGracePeriodSeconds": "number",
                          "tolerations": [
                            "list",
                            [
                              "object",
                              {
                                "effect": "string",
                                "key": "string",
                                "operator": "string",
                                "tolerationSeconds": "number",
                                "value": "string"
                              }
                            ]
                          ],
                          "volumeMounts": [
                            "list",
                            [
                              "object",
                              {
                                "mountPath": "string",
                                "mountPropagation": "string",
                                "name": "string",
                                "readOnly": "bool",
                                "subPath": "string",
                                "subPathExpr": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "failureRetries": "number",
                      "hadoopConf": [
                        "map",
                        "string"
                      ],
                      "hadoopConfigMap": "string",
                      "image": "string",
                      "imagePullPolicy": "string",
                      "imagePullSecrets": [
                        "list",
                        "string"
                      ],
                      "mainApplicationFile": "string",
                      "mainClass": "string",
                      "memoryOverheadFactor": "string",
                      "mode": "string",
                      "monitoring": [
                        "object",
                        {
                          "exposeDriverMetrics": "bool",
                          "exposeExecutorMetrics": "bool",
                          "metricsProperties": "string",
                          "metricsPropertiesFile": "string",
                          "prometheus": [
                            "object",
                            {
                              "configFile": "string",
                              "configuration": "string",
                              "jmxExporterJar": "string",
                              "port": "number",
                              "portName": "string"
                            }
                          ]
                        }
                      ],
                      "nodeSelector": [
                        "map",
                        "string"
                      ],
                      "proxyUser": "string",
                      "pythonVersion": "string",
                      "restartPolicy": [
                        "object",
                        {
                          "onFailureRetries": "number",
                          "onFailureRetryInterval": "number",
                          "onSubmissionFailureRetries": "number",
                          "onSubmissionFailureRetryInterval": "number",
                          "type": "string"
                        }
                      ],
                      "retryInterval": "number",
                      "sparkConf": [
                        "map",
                        "string"
                      ],
                      "sparkConfigMap": "string",
                      "sparkUIOptions": [
                        "object",
                        {
                          "ingressAnnotations": [
                            "map",
                            "string"
                          ],
                          "ingressTLS": [
                            "list",
                            [
                              "object",
                              {
                                "hosts": [
                                  "list",
                                  "string"
                                ],
                                "secretName": "string"
                              }
                            ]
                          ],
                          "serviceAnnotations": [
                            "map",
                            "string"
                          ],
                          "serviceLabels": [
                            "map",
                            "string"
                          ],
                          "servicePort": "number",
                          "servicePortName": "string",
                          "serviceType": "string"
                        }
                      ],
                      "sparkVersion": "string",
                      "timeToLiveSeconds": "number",
                      "type": "string",
                      "volumes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "awsElasticBlockStore": [
                                "object",
                                {
                                  "fsType": "string",
                                  "partition": "number",
                                  "readOnly": "bool",
                                  "volumeID": "string"
                                }
                              ],
                              "azureDisk": [
                                "object",
                                {
                                  "cachingMode": "string",
                                  "diskName": "string",
                                  "diskURI": "string",
                                  "fsType": "string",
                                  "kind": "string",
                                  "readOnly": "bool"
                                }
                              ],
                              "azureFile": [
                                "object",
                                {
                                  "readOnly": "bool",
                                  "secretName": "string",
                                  "shareName": "string"
                                }
                              ],
                              "cephfs": [
                                "object",
                                {
                                  "monitors": [
                                    "list",
                                    "string"
                                  ],
                                  "path": "string",
                                  "readOnly": "bool",
                                  "secretFile": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ],
                                  "user": "string"
                                }
                              ],
                              "cinder": [
                                "object",
                                {
                                  "fsType": "string",
                                  "readOnly": "bool",
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ],
                                  "volumeID": "string"
                                }
                              ],
                              "configMap": [
                                "object",
                                {
                                  "defaultMode": "number",
                                  "items": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "mode": "number",
                                        "path": "string"
                                      }
                                    ]
                                  ],
                                  "name": "string",
                                  "optional": "bool"
                                }
                              ],
                              "csi": [
                                "object",
                                {
                                  "driver": "string",
                                  "fsType": "string",
                                  "nodePublishSecretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ],
                                  "readOnly": "bool",
                                  "volumeAttributes": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ],
                              "downwardAPI": [
                                "object",
                                {
                                  "defaultMode": "number",
                                  "items": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "fieldRef": [
                                          "object",
                                          {
                                            "apiVersion": "string",
                                            "fieldPath": "string"
                                          }
                                        ],
                                        "mode": "number",
                                        "path": "string",
                                        "resourceFieldRef": [
                                          "object",
                                          {
                                            "containerName": "string",
                                            "divisor": "string",
                                            "resource": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "emptyDir": [
                                "object",
                                {
                                  "medium": "string",
                                  "sizeLimit": "string"
                                }
                              ],
                              "ephemeral": [
                                "object",
                                {
                                  "volumeClaimTemplate": [
                                    "object",
                                    {
                                      "metadata": "dynamic",
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "list",
                                            "string"
                                          ],
                                          "dataSource": [
                                            "object",
                                            {
                                              "apiGroup": "string",
                                              "kind": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "dataSourceRef": [
                                            "object",
                                            {
                                              "apiGroup": "string",
                                              "kind": "string",
                                              "name": "string",
                                              "namespace": "string"
                                            }
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "limits": [
                                                "map",
                                                "string"
                                              ],
                                              "requests": [
                                                "map",
                                                "string"
                                              ]
                                            }
                                          ],
                                          "selector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": [
                                                "map",
                                                "string"
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string",
                                          "volumeAttributesClassName": "string",
                                          "volumeMode": "string",
                                          "volumeName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "fc": [
                                "object",
                                {
                                  "fsType": "string",
                                  "lun": "number",
                                  "readOnly": "bool",
                                  "targetWWNs": [
                                    "list",
                                    "string"
                                  ],
                                  "wwids": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "flexVolume": [
                                "object",
                                {
                                  "driver": "string",
                                  "fsType": "string",
                                  "options": [
                                    "map",
                                    "string"
                                  ],
                                  "readOnly": "bool",
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "flocker": [
                                "object",
                                {
                                  "datasetName": "string",
                                  "datasetUUID": "string"
                                }
                              ],
                              "gcePersistentDisk": [
                                "object",
                                {
                                  "fsType": "string",
                                  "partition": "number",
                                  "pdName": "string",
                                  "readOnly": "bool"
                                }
                              ],
                              "gitRepo": [
                                "object",
                                {
                                  "directory": "string",
                                  "repository": "string",
                                  "revision": "string"
                                }
                              ],
                              "glusterfs": [
                                "object",
                                {
                                  "endpoints": "string",
                                  "path": "string",
                                  "readOnly": "bool"
                                }
                              ],
                              "hostPath": [
                                "object",
                                {
                                  "path": "string",
                                  "type": "string"
                                }
                              ],
                              "iscsi": [
                                "object",
                                {
                                  "chapAuthDiscovery": "bool",
                                  "chapAuthSession": "bool",
                                  "fsType": "string",
                                  "initiatorName": "string",
                                  "iqn": "string",
                                  "iscsiInterface": "string",
                                  "lun": "number",
                                  "portals": [
                                    "list",
                                    "string"
                                  ],
                                  "readOnly": "bool",
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ],
                                  "targetPortal": "string"
                                }
                              ],
                              "name": "string",
                              "nfs": [
                                "object",
                                {
                                  "path": "string",
                                  "readOnly": "bool",
                                  "server": "string"
                                }
                              ],
                              "persistentVolumeClaim": [
                                "object",
                                {
                                  "claimName": "string",
                                  "readOnly": "bool"
                                }
                              ],
                              "photonPersistentDisk": [
                                "object",
                                {
                                  "fsType": "string",
                                  "pdID": "string"
                                }
                              ],
                              "portworxVolume": [
                                "object",
                                {
                                  "fsType": "string",
                                  "readOnly": "bool",
                                  "volumeID": "string"
                                }
                              ],
                              "projected": [
                                "object",
                                {
                                  "defaultMode": "number",
                                  "sources": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "clusterTrustBundle": [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "name": "string",
                                            "optional": "bool",
                                            "path": "string",
                                            "signerName": "string"
                                          }
                                        ],
                                        "configMap": [
                                          "object",
                                          {
                                            "items": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "mode": "number",
                                                  "path": "string"
                                                }
                                              ]
                                            ],
                                            "name": "string",
                                            "optional": "bool"
                                          }
                                        ],
                                        "downwardAPI": [
                                          "object",
                                          {
                                            "items": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "fieldRef": [
                                                    "object",
                                                    {
                                                      "apiVersion": "string",
                                                      "fieldPath": "string"
                                                    }
                                                  ],
                                                  "mode": "number",
                                                  "path": "string",
                                                  "resourceFieldRef": [
                                                    "object",
                                                    {
                                                      "containerName": "string",
                                                      "divisor": "string",
                                                      "resource": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ]
                                          }
                                        ],
                                        "secret": [
                                          "object",
                                          {
                                            "items": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "mode": "number",
                                                  "path": "string"
                                                }
                                              ]
                                            ],
                                            "name": "string",
                                            "optional": "bool"
                                          }
                                        ],
                                        "serviceAccountToken": [
                                          "object",
                                          {
                                            "audience": "string",
                                            "expirationSeconds": "number",
                                            "path": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "quobyte": [
                                "object",
                                {
                                  "group": "string",
                                  "readOnly": "bool",
                                  "registry": "string",
                                  "tenant": "string",
                                  "user": "string",
                                  "volume": "string"
                                }
                              ],
                              "rbd": [
                                "object",
                                {
                                  "fsType": "string",
                                  "image": "string",
                                  "keyring": "string",
                                  "monitors": [
                                    "list",
                                    "string"
                                  ],
                                  "pool": "string",
                                  "readOnly": "bool",
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ],
                                  "user": "string"
                                }
                              ],
                              "scaleIO": [
                                "object",
                                {
                                  "fsType": "string",
                                  "gateway": "string",
                                  "protectionDomain": "string",
                                  "readOnly": "bool",
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ],
                                  "sslEnabled": "bool",
                                  "storageMode": "string",
                                  "storagePool": "string",
                                  "system": "string",
                                  "volumeName": "string"
                                }
                              ],
                              "secret": [
                                "object",
                                {
                                  "defaultMode": "number",
                                  "items": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "mode": "number",
                                        "path": "string"
                                      }
                                    ]
                                  ],
                                  "optional": "bool",
                                  "secretName": "string"
                                }
                              ],
                              "storageos": [
                                "object",
                                {
                                  "fsType": "string",
                                  "readOnly": "bool",
                                  "secretRef": [
                                    "object",
                                    {
                                      "name": "string"
                                    }
                                  ],
                                  "volumeName": "string",
                                  "volumeNamespace": "string"
                                }
                              ],
                              "vsphereVolume": [
                                "object",
                                {
                                  "fsType": "string",
                                  "storagePolicyID": "string",
                                  "storagePolicyName": "string",
                                  "volumePath": "string"
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "kubernetes_config_map.cassandra_setup_keyspace_tables",
            "kubernetes_config_map.pipeline-config",
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.kafka-volume",
            "kubernetes_secret.pipeline-secrets",
            "kubernetes_stateful_set.cassandra",
            "kubernetes_stateful_set.kafka"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "grafana-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "grafana",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "grafana",
                "resource_version": "1310241",
                "uid": "bb357017-93b4-4425-836e-acc2a2466d2e"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "pipeline-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pipeline",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "pipeline",
                "resource_version": "1310240",
                "uid": "5b75ac7d-3700-4f92-b0cc-2e42e4269cdb"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "spark-operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "spark-operator",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "spark-operator"
                },
                "name": "spark-operator",
                "resource_version": "1310242",
                "uid": "831da039-f059-4534-9b27-95f7057f3ca6"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_network_policy",
      "name": "pipeline-network",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pipeline/pipeline-network",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "pipeline-network",
                "namespace": "pipeline",
                "resource_version": "1310257",
                "uid": "decc9471-913f-4cef-95af-2d68efb43b1b"
              }
            ],
            "spec": [
              {
                "egress": [],
                "ingress": [
                  {
                    "from": [
                      {
                        "ip_block": [],
                        "namespace_selector": [],
                        "pod_selector": [
                          {
                            "match_expressions": [],
                            "match_labels": {
                              "pipeline-network": "true"
                            }
                          }
                        ]
                      }
                    ],
                    "ports": []
                  }
                ],
                "pod_selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "pipeline-network": "true"
                    }
                  }
                ],
                "policy_types": [
                  "Ingress"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_persistent_volume",
      "name": "cassandra-db-volume",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cassandra-db-volume",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "cassandra-db-volume",
                "resource_version": "1310262",
                "uid": "00dd20f6-d385-4852-a0b5-e5674fd32c82"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteMany"
                ],
                "capacity": {
                  "storage": "3Gi"
                },
                "claim_ref": [
                  {
                    "name": "cassandra-db-volume",
                    "namespace": "pipeline"
                  }
                ],
                "mount_options": [],
                "node_affinity": [],
                "persistent_volume_reclaim_policy": "Delete",
                "persistent_volume_source": [
                  {
                    "aws_elastic_block_store": [],
                    "azure_disk": [],
                    "azure_file": [],
                    "ceph_fs": [],
                    "cinder": [],
                    "csi": [],
                    "fc": [],
                    "flex_volume": [],
                    "flocker": [],
                    "gce_persistent_disk": [],
                    "glusterfs": [],
                    "host_path": [
                      {
                        "path": "/var/lib/minikube/pv0001/",
                        "type": ""
                      }
                    ],
                    "iscsi": [],
                    "local": [],
                    "nfs": [],
                    "photon_persistent_disk": [],
                    "quobyte": [],
                    "rbd": [],
                    "vsphere_volume": []
                  }
                ],
                "storage_class_name": "hostpath",
                "volume_mode": "Filesystem"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_persistent_volume",
      "name": "grafana-pv",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "grafana-pv",
            "metadata": [
              {
                "annotations": null,
                "generation": 0,
                "labels": null,
                "name": "grafana-pv",
                "resource_version": "1310299",
                "uid": "fadc8e67-5e84-460b-afed-cd0b7dec8c8e"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteOnce"
                ],
                "capacity": {
                  "storage": "5Gi"
                },
                "claim_ref": [],
                "mount_options": null,
                "node_affinity": [],
                "persistent_volume_reclaim_policy": "Delete",
                "persistent_volume_source": [
                  {
                    "aws_elastic_block_store": [],
                    "azure_disk": [],
                    "azure_file": [],
                    "ceph_fs": [],
                    "cinder": [],
                    "csi": [],
                    "fc": [],
                    "flex_volume": [],
                    "flocker": [],
                    "gce_persistent_disk": [],
                    "glusterfs": [],
                    "host_path": [
                      {
                        "path": "/var/lib/minikube/pv0003/",
                        "type": ""
                      }
                    ],
                    "iscsi": [],
                    "local": [],
                    "nfs": [],
                    "photon_persistent_disk": [],
                    "quobyte": [],
                    "rbd": [],
                    "vsphere_volume": []
                  }
                ],
                "storage_class_name": "",
                "volume_mode": "Filesystem"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.kafka-volume"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_persistent_volume",
      "name": "kafka-volume",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kafka-volume",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "kafka-volume",
                "resource_version": "1310284",
                "uid": "02a03ad1-3ecb-4a0f-873a-cc9022829e4a"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteMany"
                ],
                "capacity": {
                  "storage": "1Gi"
                },
                "claim_ref": [],
                "mount_options": [],
                "node_affinity": [],
                "persistent_volume_reclaim_policy": "Delete",
                "persistent_volume_source": [
                  {
                    "aws_elastic_block_store": [],
                    "azure_disk": [],
                    "azure_file": [],
                    "ceph_fs": [],
                    "cinder": [],
                    "csi": [],
                    "fc": [],
                    "flex_volume": [],
                    "flocker": [],
                    "gce_persistent_disk": [],
                    "glusterfs": [],
                    "host_path": [
                      {
                        "path": "/var/lib/minikube/pv0002/",
                        "type": ""
                      }
                    ],
                    "iscsi": [],
                    "local": [],
                    "nfs": [],
                    "photon_persistent_disk": [],
                    "quobyte": [],
                    "rbd": [],
                    "vsphere_volume": []
                  }
                ],
                "storage_class_name": "hostpath",
                "volume_mode": "Filesystem"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_persistent_volume_claim",
      "name": "cassandra-db-volume",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pipeline/cassandra-db-volume",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "cassandra-db-volume"
                },
                "name": "cassandra-db-volume",
                "namespace": "pipeline",
                "resource_version": "1310274",
                "uid": "713cd6e3-10a5-45e3-a23c-a25cef195ba2"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteMany"
                ],
                "resources": [
                  {
                    "limits": {},
                    "requests": {
                      "storage": "3Gi"
                    }
                  }
                ],
                "selector": [],
                "storage_class_name": "hostpath",
                "volume_mode": "Filesystem",
                "volume_name": "cassandra-db-volume"
              }
            ],
            "timeouts": null,
            "wait_until_bound": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_persistent_volume_claim",
      "name": "grafana-pvc",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "grafana/grafana-pvc",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "grafana-volume"
                },
                "name": "grafana-pvc",
                "namespace": "grafana",
                "resource_version": "1310308",
                "uid": "a4e5a73c-e7c1-4b85-9131-9d3e8e651e49"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteOnce"
                ],
                "resources": [
                  {
                    "limits": null,
                    "requests": {
                      "storage": "5Gi"
                    }
                  }
                ],
                "selector": [],
                "storage_class_name": "hostpath",
                "volume_mode": "Filesystem",
                "volume_name": "pvc-a4e5a73c-e7c1-4b85-9131-9d3e8e651e49"
              }
            ],
            "timeouts": null,
            "wait_until_bound": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_namespace.grafana-namespace",
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.grafana-pv",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.kafka-volume"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_persistent_volume_claim",
      "name": "kafka-volume",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pipeline/kafka-volume",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "kafka-volume"
                },
                "name": "kafka-volume",
                "namespace": "pipeline",
                "resource_version": "1310288",
                "uid": "ac07005b-1f06-46e0-8e79-4b76056c4944"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteMany"
                ],
                "resources": [
                  {
                    "limits": {},
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                ],
                "selector": [],
                "storage_class_name": "hostpath",
                "volume_mode": "Filesystem",
                "volume_name": "pvc-ac07005b-1f06-46e0-8e79-4b76056c4944"
              }
            ],
            "timeouts": null,
            "wait_until_bound": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "spark-role",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pipeline/spark-role",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "spark-operator"
                },
                "name": "spark-role",
                "namespace": "pipeline",
                "resource_version": "1310254",
                "uid": "0b7f071f-380d-4aeb-a9a9-668a47a000b4"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "resource_names": null,
                "resources": [
                  "pods"
                ],
                "verbs": [
                  "*"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": null,
                "resources": [
                  "services"
                ],
                "verbs": [
                  "*"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": null,
                "resources": [
                  "deployments"
                ],
                "verbs": [
                  "*"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": null,
                "resources": [
                  "configmaps"
                ],
                "verbs": [
                  "*"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_role_binding",
      "name": "spark-role-binding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pipeline/spark-role-binding",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "spark-operator"
                },
                "name": "spark-role-binding",
                "namespace": "pipeline",
                "resource_version": "1310266",
                "uid": "feefa819-d9b8-4201-a855-84fac0a1be1b"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "spark-role"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "spark-sa",
                "namespace": "pipeline"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_role.spark-role",
            "kubernetes_service_account.spark-service-account"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "pipeline-secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "CASSANDRA_PASSWORD": "cassandra",
              "CASSANDRA_USER": "cassandra",
              "FINNHUB_API_TOKEN": "cptsaopr01qnga5im4fgcptsaopr01qnga5im4g0"
            },
            "id": "pipeline/pipeline-secrets",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "pipeline-secrets",
                "namespace": "pipeline",
                "resource_version": "1310253",
                "uid": "91fe2f54-32ed-4720-8d38-a3a9a9e48962"
              }
            ],
            "timeouts": null,
            "type": "opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "cassandra",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "pipeline/cassandra",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "cassandra"
                },
                "name": "cassandra",
                "namespace": "pipeline",
                "resource_version": "1310582",
                "uid": "92bc1f4c-9e6b-418b-9302-f1163b87e97e"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "None",
                "cluster_ips": [
                  "None"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "cql",
                    "node_port": 0,
                    "port": 9042,
                    "protocol": "TCP",
                    "target_port": "9042"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "cassandra"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.cassandra_setup_keyspace_tables",
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_stateful_set.cassandra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "cassandra_web",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "pipeline/cassandra-web",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "cassandra-web",
                "namespace": "pipeline",
                "resource_version": "1310337",
                "uid": "ef2827fe-4403-4546-862f-f345ecdc98a5"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.97.195.155",
                "cluster_ips": [
                  "10.97.195.155"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "cassandra-web",
                    "node_port": 0,
                    "port": 8083,
                    "protocol": "TCP",
                    "target_port": "8083"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "cassandra-web"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_deployment.cassandra_web"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "finnhub-producer",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "pipeline/finnhub-producer",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "finnhub-producer"
                },
                "name": "finnhub-producer",
                "namespace": "pipeline",
                "resource_version": "1310679",
                "uid": "1ca1353b-d771-464c-a9a9-51900a16b04e"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "None",
                "cluster_ips": [
                  "None"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "finnhub-producer",
                    "node_port": 0,
                    "port": 8001,
                    "protocol": "TCP",
                    "target_port": "8001"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "finnhub-producer"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.cassandra_setup_keyspace_tables",
            "kubernetes_deployment.finnhub-producer",
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.kafka-volume",
            "kubernetes_stateful_set.cassandra",
            "kubernetes_stateful_set.kafka"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "grafana/grafana",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "grafana"
                },
                "name": "grafana",
                "namespace": "grafana",
                "resource_version": "1310647",
                "uid": "a2ac966e-ed0f-4a36-b685-6edc0d941f14"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.98.240.138",
                "cluster_ips": [
                  "10.98.240.138"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "grafana",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "grafana"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map.cassandra_setup_keyspace_tables",
            "kubernetes_config_map.grafana-dashboard-pipeline",
            "kubernetes_config_map.grafana-provisioning-dashboards",
            "kubernetes_config_map.grafana-provisioning-datasources",
            "kubernetes_deployment.grafana",
            "kubernetes_namespace.grafana-namespace",
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.grafana-pv",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.grafana-pvc",
            "kubernetes_persistent_volume_claim.kafka-volume",
            "kubernetes_stateful_set.cassandra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "kafka",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "pipeline/kafka-service",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "kafka"
                },
                "name": "kafka-service",
                "namespace": "pipeline",
                "resource_version": "1310353",
                "uid": "76011449-c132-4077-9c7f-5a99fd1dbbb3"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "None",
                "cluster_ips": [
                  "None"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "kafka-external",
                    "node_port": 0,
                    "port": 9092,
                    "protocol": "TCP",
                    "target_port": "9092"
                  },
                  {
                    "app_protocol": "",
                    "name": "kafka-internal",
                    "node_port": 0,
                    "port": 29092,
                    "protocol": "TCP",
                    "target_port": "29092"
                  },
                  {
                    "app_protocol": "",
                    "name": "kafka-ui",
                    "node_port": 0,
                    "port": 18080,
                    "protocol": "TCP",
                    "target_port": "18080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "kafka"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.kafka-volume",
            "kubernetes_stateful_set.kafka"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "spark-service-account",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "",
            "id": "pipeline/spark-sa",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "spark-operator"
                },
                "name": "spark-sa",
                "namespace": "pipeline",
                "resource_version": "1310251",
                "uid": "3c6b9f2e-1bf4-43d3-9dc9-5a5056f36acc"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_stateful_set",
      "name": "cassandra",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "pipeline/cassandra",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "cassandra",
                "namespace": "pipeline",
                "resource_version": "1310551",
                "uid": "8e993fff-a1eb-4381-a612-240e62bb69d2"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "persistent_volume_claim_retention_policy": [
                  {
                    "when_deleted": "Retain",
                    "when_scaled": "Retain"
                  }
                ],
                "pod_management_policy": "OrderedReady",
                "replicas": "1",
                "revision_history_limit": 0,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "cassandra"
                    }
                  }
                ],
                "service_name": "cassandra",
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "cassandra",
                          "pipeline-network": "true"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "CASSANDRA_CLUSTER_NAME",
                                "value": "CassandraCluster",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_DATACENTER",
                                "value": "DataCenter1",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_RACK",
                                "value": "Rack1",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_ENDPOINT_SNITCH",
                                "value": "GossipingPropertyFileSnitch",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_HOST",
                                "value": "cassandra.pipeline.svc.cluster.local:9042",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_NUM_TOKENS",
                                "value": "128",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_USER",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [],
                                    "resource_field_ref": [],
                                    "secret_key_ref": [
                                      {
                                        "key": "CASSANDRA_USER",
                                        "name": "pipeline-secrets",
                                        "optional": false
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "name": "CASSANDRA_PASSWORD",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [],
                                    "resource_field_ref": [],
                                    "secret_key_ref": [
                                      {
                                        "key": "CASSANDRA_PASSWORD",
                                        "name": "pipeline-secrets",
                                        "optional": false
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "name": "HEAP_NEWSIZE",
                                "value": "128M",
                                "value_from": []
                              },
                              {
                                "name": "MAX_HEAP_SIZE",
                                "value": "256M",
                                "value_from": []
                              },
                              {
                                "name": "POD_IP",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "status.podIP"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              }
                            ],
                            "env_from": [],
                            "image": "cassandra:4.0.15",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [
                              {
                                "post_start": [
                                  {
                                    "exec": [
                                      {
                                        "command": [
                                          "/bin/bash",
                                          "-c",
                                          "until cqlsh -e 'DESCRIBE KEYSPACES'; do sleep 6; done; cqlsh -f /setup/cassandra-setup.cql; echo 'Cassandra setup completed';"
                                        ]
                                      }
                                    ],
                                    "http_get": [],
                                    "tcp_socket": []
                                  }
                                ],
                                "pre_stop": []
                              }
                            ],
                            "liveness_probe": [],
                            "name": "cassandra",
                            "port": [
                              {
                                "container_port": 9042,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "cql",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/setup",
                                "mount_propagation": "None",
                                "name": "cassandra-setup-volume",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/var/lib/cassandra",
                                "mount_propagation": "None",
                                "name": "cassandra-data",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "cassandra",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "cassandra-data",
                            "nfs": [],
                            "persistent_volume_claim": [
                              {
                                "claim_name": "cassandra-db-volume",
                                "read_only": false
                              }
                            ],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "create-keyspace-tables",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "cassandra-setup-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ],
                "update_strategy": [],
                "volume_claim_template": []
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "kubernetes_config_map.cassandra_setup_keyspace_tables",
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_stateful_set",
      "name": "kafka",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "pipeline/kafka",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "kafka"
                },
                "name": "kafka",
                "namespace": "pipeline",
                "resource_version": "1310343",
                "uid": "6849287c-e3ab-4bcd-b6dd-0fc2dc6da608"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "persistent_volume_claim_retention_policy": [
                  {
                    "when_deleted": "Retain",
                    "when_scaled": "Retain"
                  }
                ],
                "pod_management_policy": "OrderedReady",
                "replicas": "1",
                "revision_history_limit": 0,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "kafka"
                    }
                  }
                ],
                "service_name": "kafka-service",
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "kafka",
                          "pipeline-network": "true"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "KAFKA_PROCESS_ROLES",
                                "value": "broker,controller",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_CONTROLLER_QUORUM_VOTERS",
                                "value": "1@localhost:29093",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_LISTENERS",
                                "value": "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://localhost:29093",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_ADVERTISED_LISTENERS",
                                "value": "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://kafka-service.pipeline.svc.cluster.local:9092",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP",
                                "value": "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_CONTROLLER_LISTENER_NAMES",
                                "value": "CONTROLLER",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_INTER_BROKER_LISTENER_NAME",
                                "value": "PLAINTEXT",
                                "value_from": []
                              },
                              {
                                "name": "CLUSTER_ID",
                                "value": "cluster-kafka-id",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_NODE_ID",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_BROKER_ID",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS",
                                "value": "0",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_TRANSACTION_STATE_LOG_MIN_ISR",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR",
                                "value": "1",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "confluentinc/cp-kafka:7.8.0",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "kafka",
                            "port": [
                              {
                                "container_port": 9092,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 29092,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/var/data",
                                "mount_propagation": "None",
                                "name": "kafka-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          },
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS",
                                "value": "localhost:29092",
                                "value_from": []
                              },
                              {
                                "name": "DYNAMIC_CONFIG_ENABLED",
                                "value": "true",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "provectuslabs/kafka-ui:v0.7.2",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "kafka-ui",
                            "port": [
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "kafka-service",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "kafka-volume",
                            "nfs": [],
                            "persistent_volume_claim": [
                              {
                                "claim_name": "kafka-volume",
                                "read_only": false
                              }
                            ],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ],
                "update_strategy": [],
                "volume_claim_template": []
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "kubernetes_namespace.pipeline-namespace",
            "kubernetes_persistent_volume.cassandra-db-volume",
            "kubernetes_persistent_volume.kafka-volume",
            "kubernetes_persistent_volume_claim.cassandra-db-volume",
            "kubernetes_persistent_volume_claim.kafka-volume"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
